{"version":3,"sources":["components/Navegation.js","components/boards/Form.js","components/boards/Idea.js","components/boards/Board.js","components/App.js","serviceWorker.js","index.js"],"names":["Navegation","props","react_default","a","createElement","className","href","Form","nombreRef","React","createRef","estadodRef","addBoard","e","preventDefault","obj","nombre","_this","current","value","estado","createBoard","currentTarget","reset","onSubmit","this","type","placeholder","required","ref","name","Component","Idea","_this$props$idea","idea","id","onClick","removeIdea","index","Board","addIdea","board","tablero","createIdea","i","deleteIdea","_this2","_this$props$tablero","ideas","listaIdeas","Object","keys","map","key","boards_Idea","concat","removeBoard","App","state","tableros","cargarDatos","axios","get","headers","Authorization","then","res","setState","data","results","post","toConsumableArray","url","delete","status","filter","boards","boards_Board","components_Navegation","boards_Form","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a5d6bb58.chunk.js","sourcesContent":["import React  from 'react';\n\nconst Navegation = (props) => {\n    return(\n        <header>\n            <nav className=\"nav navbar-dark bg-dark\">\n                <a href=\"/\" className=\"text-white ml-2\">Useit</a>\n            </nav>\n        </header>\n    )\n};\n\nexport default Navegation;","import React, { Component } from 'react';\n\nclass Form extends Component {\n    // Atributes\n    nombreRef  = React.createRef();\n    estadodRef = React.createRef();\n\n    addBoard = (e) => {\n        e.preventDefault();\n        const obj = {\n            nombre: this.nombreRef.current.value,\n            estado: this.estadodRef.current.value\n        };\n        this.props.createBoard(obj);\n        e.currentTarget.reset(); // Optional\n    };\n\n    // Render Method\n    render(){\n        return(\n            <form className=\"form-inline\" onSubmit={this.addBoard}>\n                <input type=\"text\" className=\"form-control mr-4\" placeholder=\"Nombre del Tablero\" required ref={this.nombreRef} />\n                <select name=\"estado\" className=\"custom-select mr-2\" ref={this.estadodRef}>\n                    <option>Seleccionel el estado...</option>\n                    <option value=\"PUBLICO\">PÃºblico</option>\n                    <option value=\"PRIVADO\">Privado</option>\n                </select>\n                <button type=\"submit\" className=\"btn btn-success\">+ Nuevo Tablero</button>\n            </form>\n        )\n    }\n}\n\nexport default Form;","import React, { Component } from 'react';\n\n\nclass Idea extends Component {\n\n    // Render Method\n    render(){\n        const {id, nombre, estado} = this.props.idea;\n\n        return(\n            <div className=\"card mt-2 shadow-lg\">\n                <div className=\"card-body\">\n                    <span>\n                        {nombre} - <small className=\"text-muted\">({estado})</small>\n                        <button className=\"btn btn-outline-danger btn-sm float-right\" onClick={ () =>\n                            this.props.removeIdea(this.props.index, id) }>-\n                        </button>\n                    </span>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Idea;","import React, { Component } from 'react';\nimport Idea from './Idea';\n\nclass Board extends Component {\n\n    nombreRef  = React.createRef();\n    estadodRef = React.createRef();\n\n    // Add Idea\n    addIdea = (e) => {\n        e.preventDefault();\n        const idea = {\n            board: this.props.tablero.id,\n            nombre: this.nombreRef.current.value,\n            estado: this.estadodRef.current.value\n        };\n        this.props.createIdea(this.props.i, idea);\n        e.currentTarget.reset(); // Optional\n    };\n\n    deleteIdea = (index, id) => {\n        this.props.removeIdea(index, id);\n    };\n\n    // Render Method\n    render(){\n        const {id, nombre, ideas} = this.props.tablero;\n        const listaIdeas = Object.keys(ideas).map((key, i) => (\n            <Idea\n                key={i}\n                index={i}\n                idea={ideas[i]}\n                removeIdea={this.deleteIdea}\n            />\n        ));\n        return(\n            <div className=\"col-md-6\">\n                <div className=\"card border-primary mb-3\">\n                    <div className=\"card-header\">\n                        <span id={`tablero-${id}`}>{nombre}</span>\n                        <button className=\"btn btn-danger btn-sm ml-2 mb-1 float-right\" onClick={ () => this.props.removeBoard(id) } >Del</button>\n                    </div>\n                    <div className=\"card-body text-primary\">\n                        {listaIdeas}\n                    </div>\n                    <div className=\"card-footer\">\n                        <div className=\"row justify-content-center\">\n                            <form className=\"form-inline\" onSubmit={this.addIdea}>\n                                <input type=\"text\" className=\"form-control mr-2\" placeholder=\"Escribe tu idea...\" required ref={this.nombreRef} />\n                                <select name=\"estado\" className=\"custom-select mr-2\" ref={this.estadodRef}>\n                                    <option>Estado...</option>\n                                    <option value=\"PUBLICO\">PÃºblico</option>\n                                    <option value=\"PRIVADO\">Privado</option>\n                                </select>\n                                <button type=\"submit\" className=\"btn btn-primary btn-sm rounded-pill\">+ Nueva Idea</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Board;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport '../css/App.css';\nimport Navegation from './Navegation';\nimport Form from './boards/Form';\nimport Board from './boards/Board';\n\n\nclass App extends Component {\n    state = {\n        tableros: {}\n    };\n\n    componentDidMount() {\n        this.cargarDatos();\n    }\n\n    cargarDatos = () => {\n        var config = {\n            headers: {'Authorization': \"Token b1b93253a301da3f7c055d9d44f6f7b25c55c39e\"}\n        };\n        const url = `http://3.85.113.134/api/auth/boards/`;\n        axios.get(url, config)\n            .then(res=>{\n                this.setState({\n                    tableros: res.data.results\n                });\n            });\n    };\n\n    createBoard = (board) => {\n        const config = {\n            headers: {'Authorization': \"Token b1b93253a301da3f7c055d9d44f6f7b25c55c39e\"}\n        };\n        const url = `http://3.85.113.134/api/auth/boards/`;\n        axios.post(url, board, config)\n            .then(res=>{\n                this.setState({\n                    tableros: [...this.state.tableros, res.data]\n                });\n            });\n    };\n\n    removeBoard = (id) => {\n        const config = {\n            headers: {'Authorization': \"Token b1b93253a301da3f7c055d9d44f6f7b25c55c39e\"}\n        };\n        const url = `http://3.85.113.134/api/auth/boards/${id}/`;\n        axios.delete(url,config)\n            .then(data=>{\n                if(data.status === 204 ){\n                    const boards = [...this.state.tableros];\n                    let res = boards.filter(obj=>(\n                        obj.id !== id\n                    ));\n                    this.setState({\n                        tableros: res\n                    })\n                }\n            });\n    };\n\n    createIdea = (index, idea) => {\n        const config = {\n            headers: {'Authorization': \"Token b1b93253a301da3f7c055d9d44f6f7b25c55c39e\"}\n        };\n        const url = `http://3.85.113.134/api/auth/ideas/`;\n        axios.post(url, idea, config)\n            .then(res => {\n                const boards = [...this.state.tableros];\n                const ideas = [...boards[index].ideas, idea];\n                boards[index].ideas = ideas;\n                this.setState({\n                    tableros: boards\n                });\n            });\n    };\n\n    removeIdea = (index, id) => {\n        const config = {\n            headers: {'Authorization': \"Token b1b93253a301da3f7c055d9d44f6f7b25c55c39e\"}\n        };\n        const url = `http://3.85.113.134/api/auth/ideas/${id}/`;\n        axios.delete(url,config)\n            .then(data => {\n                if(data.status === 204 ){\n                    const boards = [...this.state.tableros];\n                    let ideas = boards[index].ideas.filter(obj=>(\n                        obj.id !== id\n                    ));\n                    boards[index].ideas = ideas;\n                    this.setState({\n                        tableros: boards\n                    })\n                }\n            });\n    };\n\n    // Render Method\n    render() {\n        const tableros = Object.keys(this.state.tableros).map((key, i) => (\n            <Board\n                key={i}\n                i={i}\n                tablero={this.state.tableros[i]}\n                removeBoard={this.removeBoard }\n                createIdea={this.createIdea}\n                removeIdea={this.removeIdea}\n            />\n        ));\n        return (\n            <div className=\"App\">\n                <Navegation />\n                <div className=\"container mt-3 mb-lg-3\">\n                    <div className=\"row justify-content-center align-items-center\">\n                        <Form\n                            createBoard={this.createBoard}\n                        />\n                    </div>\n                </div>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        {tableros}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}